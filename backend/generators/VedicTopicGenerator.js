// generators/VedicTopicGenerator.js - HINDI-FIRST ASTROLOGY VERSION
const siteConfig = require("../config/siteConfig");
const Article = require('../models/Article');
const TopicHistory = require('../models/TopicHistory');

class VedicTopicGenerator {
    constructor(siteId) {
        this.siteId = siteId;
        this.config = siteConfig.getConfig(siteId);
        this.usedTopics = new Set();
        this.geminiApiKey = process.env.GEMINI_API_KEY;
    }

    // ЁЯФо HINDI VEDIC: Generate authentic Hindi astrology patterns
    getVedicHindiPatterns(category) {
        const patterns = {
            'daily-rashifal': [
                "рдЖрдЬ рдХреЗ рджрд┐рди {PLANET} рдХрд╛ рдкреНрд░рднрд╛рд╡ рдЖрдкрдХреА {RASHI} рд░рд╛рд╢рд┐ рдкрд░ рдХреИрд╕рд╛ рд░рд╣реЗрдЧрд╛?",
                "рдЖрдЬ рдХрд╛ рд░рд╛рд╢рд┐рдлрд▓: {WEEKDAY} рдХреЛ {PLANET} рдЧреНрд░рд╣ рдЖрдкрдХреЗ рдЬреАрд╡рди рдореЗрдВ рдХреНрдпрд╛ рд▓реЗрдХрд░ рдЖрдПрдЧрд╛?",
                "рдХреНрдпрд╛ рдЖрдкрдХреЛ рдкрддрд╛ рд╣реИ рдХрд┐ рдЖрдЬ {PLANET} рдХрд╛ рдкреНрд░рднрд╛рд╡ рдЖрдкрдХреА {ASPECT} рдХреЛ рдХреИрд╕реЗ рдкреНрд░рднрд╛рд╡рд┐рдд рдХрд░реЗрдЧрд╛?",
                "рдЖрдЬ рдХрд╛ рд╡реИрджрд┐рдХ рд░рд╛рд╢рд┐рдлрд▓: {RASHI} рд░рд╛рд╢рд┐ рд╡рд╛рд▓реЛрдВ рдХреЗ рд▓рд┐рдП рдЦреБрд╢рдЦрдмрд░реА рдпрд╛ рдЪреБрдиреМрддреА?",
                "рдЖрдЬ рдХреЗ рдЧреНрд░рд╣ рдЧреЛрдЪрд░ рд╕реЗ рдЬрд╛рдиреЗрдВ рдХрд┐ рдЖрдкрдХрд╛ рджрд┐рди рдХреИрд╕рд╛ рд░рд╣реЗрдЧрд╛",
                "рдЖрдЬ рдХрд╛ рджрд┐рди рдЖрдкрдХреА {RASHI} рд░рд╛рд╢рд┐ рдХреЗ рд▓рд┐рдП рдХреНрдпреЛрдВ рд╡рд┐рд╢реЗрд╖ рд╣реИ?",
                "рд╡реИрджрд┐рдХ рдЬреНрдпреЛрддрд┐рд╖ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЖрдЬ рдЖрдкрдХреЛ рдХреНрдпрд╛ рдХрд░рдирд╛ рдЪрд╛рд╣рд┐рдП рдФрд░ рдХреНрдпрд╛ рдирд╣реАрдВ?"
            ],
            'daily-horoscope': [
                "рдЖрдЬ рдХреЗ рджрд┐рди {PLANET} рдХрд╛ рдкреНрд░рднрд╛рд╡ рдЖрдкрдХреА {RASHI} рд░рд╛рд╢рд┐ рдкрд░ рдХреИрд╕рд╛ рд░рд╣реЗрдЧрд╛?",
                "рдЖрдЬ рдХрд╛ рд░рд╛рд╢рд┐рдлрд▓: {WEEKDAY} рдХреЛ {PLANET} рдЧреНрд░рд╣ рдЖрдкрдХреЗ рдЬреАрд╡рди рдореЗрдВ рдХреНрдпрд╛ рд▓реЗрдХрд░ рдЖрдПрдЧрд╛?",
                "рд╡реИрджрд┐рдХ рдЬреНрдпреЛрддрд┐рд╖ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЖрдЬ рдЖрдкрдХреЛ рдХреНрдпрд╛ рдХрд░рдирд╛ рдЪрд╛рд╣рд┐рдП рдФрд░ рдХреНрдпрд╛ рдирд╣реАрдВ?"
            ],
            'love-compatibility': [
                "рдХреНрдпрд╛ рдЖрдк рдФрд░ рдЖрдкрдХрд╛ рд╕рд╛рдереА рдХреЙрд╕реНрдорд┐рдХ рд░реВрдк рд╕реЗ рдПрдХ-рджреВрд╕рд░реЗ рдХреЗ рд▓рд┐рдП рдмрдиреЗ рд╣реИрдВ?",
                "{RASHI1} рдФрд░ {RASHI2} рдХрд╛ рдкреНрд░реЗрдо рд╕рдВрдпреЛрдЧ: рд╕реНрд╡рд░реНрдЧ рдореЗрдВ рдмрдирд╛ рдпрд╛ рдзрд░рддреА рдкрд░?",
                "рд╡реИрджрд┐рдХ рдЬреНрдпреЛрддрд┐рд╖ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЖрдкрдХрд╛ рдЖрджрд░реНрд╢ рдЬреАрд╡рдирд╕рд╛рдереА рдХреМрди рд╕рд╛ рд╣реИ?"
            ],
            'career-guidance': [
                "рдЖрдкрдХреА {RASHI} рд░рд╛рд╢рд┐ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдХреМрди рд╕рд╛ рд╡реНрдпрд╡рд╕рд╛рдп рдЖрдкрдХреЛ рд╕рдлрд▓рддрд╛ рджрд┐рд▓рд╛рдПрдЧрд╛?",
                "рдЕрд░реНрдЬреБрди рдХреА рддрд░рд╣ рдХрд░рд┐рдпрд░ рдХреА рджреБрд╡рд┐рдзрд╛? рдЬреНрдпреЛрддрд┐рд╖ рд╕реЗ рдкрд╛рдПрдВ рд╕реНрдкрд╖реНрдЯ рджрд┐рд╢рд╛",
                "{PLANET} рдЧреНрд░рд╣ рдХрд╛ рдкреНрд░рднрд╛рд╡ рдЖрдкрдХреЗ рдХрд░рд┐рдпрд░ рдкрд░ рдХреИрд╕рд╛ рд░рд╣реЗрдЧрд╛ рдЗрд╕ {SEASON} рдореЗрдВ?"
            ]
        };
        
        return patterns[category] || patterns['daily-rashifal'];
    }

    // ЁЯМЯ HINDI: Apply Vedic patterns with Hindi context
    makeTopicVedicHindi(baseTopic, category) {
        const patterns = this.getVedicHindiPatterns(category);
        const dynamicSeeds = this.generateVedicHindiSeeds();
        const { samayContext, jyotishContext } = dynamicSeeds;
        
        const pattern = patterns[Math.floor(Math.random() * patterns.length)];
        
        let vedicTopic = pattern
            .replace(/{WEEKDAY}/g, samayContext.weekdayHindi)
            .replace(/{PLANET}/g, jyotishContext.randomPlanetHindi)
            .replace(/{ASPECT}/g, jyotishContext.randomAspectHindi) 
            .replace(/{RASHI}/g, jyotishContext.randomRashiHindi)
            .replace(/{RASHI1}/g, jyotishContext.randomRashiHindi)
            .replace(/{RASHI2}/g, this.getRandomElement(['рдореЗрд╖', 'рд╡реГрд╖рдн', 'рдорд┐рдереБрди', 'рдХрд░реНрдХ']))
            .replace(/{SEASON}/g, samayContext.seasonHindi);
        
        return vedicTopic;
    }

    generateVedicHindiSeeds() {
        const now = new Date();
        
        // Hindi weekdays
        const hindiWeekdays = ['рд░рд╡рд┐рд╡рд╛рд░', 'рд╕реЛрдорд╡рд╛рд░', 'рдордВрдЧрд▓рд╡рд╛рд░', 'рдмреБрдзрд╡рд╛рд░', 'рдЧреБрд░реБрд╡рд╛рд░', 'рд╢реБрдХреНрд░рд╡рд╛рд░', 'рд╢рдирд┐рд╡рд╛рд░'];
        const hindiSeasons = ['рд╢реАрдд рдЛрддреБ', 'рд╡рд╕рдВрдд рдЛрддреБ', 'рдЧреНрд░реАрд╖реНрдо рдЛрддреБ', 'рд╡рд░реНрд╖рд╛ рдЛрддреБ'];
        
        return {
            samayContext: {
                weekdayHindi: hindiWeekdays[now.getDay()],
                seasonHindi: hindiSeasons[Math.floor(Math.random() * hindiSeasons.length)],
                currentYear: now.getFullYear()
            },
            jyotishContext: {
                randomPlanetHindi: this.getRandomElement(['рд╕реВрд░реНрдп', 'рдЪрдВрджреНрд░', 'рдордВрдЧрд▓', 'рдмреБрдз', 'рдЧреБрд░реБ', 'рд╢реБрдХреНрд░', 'рд╢рдирд┐']),
                randomAspectHindi: this.getRandomElement(['рдХрд░рд┐рдпрд░', 'рдкреНрд░реЗрдо', 'рд╕реНрд╡рд╛рд╕реНрдереНрдп', 'рдзрди']),
                randomRashiHindi: this.getRandomElement(['рдореЗрд╖', 'рд╡реГрд╖рдн', 'рдорд┐рдереБрди', 'рдХрд░реНрдХ', 'рд╕рд┐рдВрд╣', 'рдХрдиреНрдпрд╛'])
            }
        };
    }

    // ЁЯФе VEDIC HINDI: Generate topic
    async generateTopic(category, language = 'hindi') {
        try {
            const fallbackTopic = this.getFallbackTopic(category);
            const vedicTopic = this.makeTopicVedicHindi(fallbackTopic, category);
            
            if (this.usedTopics.has(vedicTopic)) {
                return this.generateTopic(category, language);
            }
            
            this.usedTopics.add(vedicTopic);
            
            return vedicTopic;
        } catch (error) {
            console.error('Vedic Hindi topic generation error:', error);
            return this.getFallbackTopic(category);
        }
    }

    getRandomElement(array) {
        return array[Math.floor(Math.random() * array.length)];
    }

    getFallbackTopic(category) {
        const fallbacks = {
            'daily-rashifal': `рдЖрдЬ рдХрд╛ рд╡реИрджрд┐рдХ рд░рд╛рд╢рд┐рдлрд▓: рдкреНрд░рд╛рдЪреАрди рдЬреНрдЮрд╛рди рд╕реЗ рдЖрдзреБрдирд┐рдХ рдорд╛рд░реНрдЧрджрд░реНрд╢рди`,
            'daily-horoscope': `рдЖрдЬ рдХрд╛ рд╡реИрджрд┐рдХ рд░рд╛рд╢рд┐рдлрд▓: рдкреНрд░рд╛рдЪреАрди рдЬреНрдЮрд╛рди рд╕реЗ рдЖрдзреБрдирд┐рдХ рдорд╛рд░реНрдЧрджрд░реНрд╢рди`,
            'love-compatibility': `рд╡реИрджрд┐рдХ рдЬреНрдпреЛрддрд┐рд╖ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЖрджрд░реНрд╢ рдЬреАрд╡рдирд╕рд╛рдереА рдХреА рдЦреЛрдЬ`,
            'career-guidance': `рдкреНрд░рд╛рдЪреАрди рдЬреНрдЮрд╛рди рд╕реЗ рдЖрдзреБрдирд┐рдХ рдХрд░рд┐рдпрд░ рдЧрд╛рдЗрдбреЗрдВрд╕`,
            'health-predictions': `рдЖрдпреБрд░реНрд╡реЗрдж рдФрд░ рдЬреНрдпреЛрддрд┐рд╖: рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХрд╛ рдХреЙрд╕реНрдорд┐рдХ рдХрдиреЗрдХреНрд╢рди`,
            'lucky-suggestions': `рдЖрдЬ рдХреЗ рд╢реБрдн рдореБрд╣реВрд░реНрдд: рдкреНрд░рд╛рдЪреАрди рд╕рдордп рд╡рд┐рдЬреНрдЮрд╛рди`,
            'gemstone-guide': `рд╡реИрджрд┐рдХ рд░рддреНрди рд╡рд┐рдЬреНрдЮрд╛рди: рдкреНрд░рд╛рдЪреАрди рдЙрдкрдЪрд╛рд░ рдХреА рд╢рдХреНрддрд┐`,
            'festival-significance': `рд╣рд┐рдВрджреВ рддреНрдпреЛрд╣рд╛рд░реЛрдВ рдХрд╛ рдЫреБрдкрд╛ рдХреЙрд╕реНрдорд┐рдХ рдкрд╛рд╡рд░`,
            'muhurat-timing': `рдЧреНрд░рд╣ рдЧреЛрдЪрд░ рдФрд░ рдЬреАрд╡рди рдкрд░ рдЙрдирдХрд╛ рдкреНрд░рднрд╛рд╡`
        };
        return fallbacks[category] || fallbacks['daily-rashifal'];
    }
}

module.exports = VedicTopicGenerator;
